"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/login/page",{

/***/ "(app-pages-browser)/./utils/profilePictureSelector.ts":
/*!*****************************************!*\
  !*** ./utils/profilePictureSelector.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PROFILE_PICTURES: () => (/* binding */ PROFILE_PICTURES),\n/* harmony export */   fetchRandomProfilePicture: () => (/* binding */ fetchRandomProfilePicture),\n/* harmony export */   getAllProfilePictures: () => (/* binding */ getAllProfilePictures),\n/* harmony export */   getCurrentProfilePicture: () => (/* binding */ getCurrentProfilePicture),\n/* harmony export */   getRandomProfilePicture: () => (/* binding */ getRandomProfilePicture),\n/* harmony export */   getSavedProfilePicture: () => (/* binding */ getSavedProfilePicture),\n/* harmony export */   refreshProfilePicture: () => (/* binding */ refreshProfilePicture),\n/* harmony export */   saveProfilePicture: () => (/* binding */ saveProfilePicture)\n/* harmony export */ });\n// filepath: /home/tr-ggr/NerdProjects/nextjs/ai-moderation/utils/profilePictureSelector.ts\n// Utility function to get a random profile picture path\n// Enum of all available profile picture filenames\nconst PROFILE_PICTURES = [\n    \"AdrianTSajulga_profile.jpeg\",\n    \"FielLouisLOmas-as_profile.jpeg\",\n    \"MauriceRTañeca_profile.jpeg\",\n    \"AlecGiuseppeKSo_profile.jpeg\",\n    \"FrancisWedemeyerNDayagro_profile.jpeg\",\n    \"MorielEdgarDeandreBien_profile.jpeg\",\n    \"AlessandraBeatrizAKisteria_profile.jpeg\",\n    \"JetherVOmictin_profile.jpeg\",\n    \"RanzMatheuMLumayno_profile.jpeg\",\n    \"AntonioMUbaldo_profile.jpeg\",\n    \"JianLevCOlamit_profile.jpeg\",\n    \"RoddneilBGemina_profile.jpeg\",\n    \"ArdelTiocoJeffLLauron_profile.jpeg\",\n    \"JorashJonathanCRobillos_profile.jpeg\",\n    \"SimonLysterPEscaño_profile.jpeg\",\n    \"AvrilNigelMChua_profile.jpeg\",\n    \"JuliaLaineGSegundo_profile.jpeg\",\n    \"StephenClintDSales_profile.jpeg\",\n    \"BasilXavierBMendoza_profile.jpeg\",\n    \"KarlChristianPAjero_profile.jpeg\",\n    \"TheodoreALadera_profile.jpeg\",\n    \"ChrisJordanGAliac_profile.jpeg\",\n    \"KayeAizernerEvangelista_profile.jpeg\",\n    \"ThomasDanjoMManulat_profile.jpeg\",\n    \"ChristianGeloDCadavos_profile.jpeg\",\n    \"KeiruVentCabili_profile.jpeg\",\n    \"TristanJameYTolentino_profile.jpeg\",\n    \"DechieASullano_profile.jpeg\",\n    \"KevinJoshRAtay_profile.jpeg\",\n    \"ValMykelCevenCBolante_profile.jpeg\",\n    \"DerrickCBinangbang_profile.jpeg\",\n    \"KyleAngelaMar_profile.jpeg\",\n    \"VanWoodroePerpetua_profile.jpeg\",\n    \"EllydhoreGabrylleSBelleza_profile.jpeg\",\n    \"MaltJohnVianneyCSolon_profile.jpeg\",\n    \"ZakOFloreta_profile.jpeg\",\n    \"ErinAsia_profile.jpeg\",\n    \"MarkAdrianBBaring_profile.jpeg\",\n    \"ZedricMarcDTabinas_profile.jpeg\",\n    \"FelicityVOrate_profile.jpeg\",\n    \"MarsLBenitez_profile.jpeg\",\n    \"ZyleGeraldeLDelaPeña_profile.jpeg\",\n    \"FelisaMelanieFayGBascug_profile.jpeg\",\n    \"MaryKarylleGDelosReyes_profile.jpeg\"\n];\n/**\n * Gets a random profile picture filename from the profiles enum\n * @returns Path to a random profile picture relative to the public directory\n */ function getRandomProfilePicture() {\n    try {\n        // Select a random profile picture from the enum\n        const randomIndex = Math.floor(Math.random() * PROFILE_PICTURES.length);\n        const randomProfileFile = PROFILE_PICTURES[randomIndex];\n        // Return the path relative to the public directory\n        return \"/profiles/\".concat(randomProfileFile);\n    } catch (error) {\n        console.error(\"Error getting random profile picture:\", error);\n        // Return a default profile picture path if there's an error\n        return \"/profiles/default_profile.jpeg\";\n    }\n}\n/**\n * Server-side function to get all available profile pictures\n * @returns Array of paths to all profile pictures\n */ function getAllProfilePictures() {\n    return PROFILE_PICTURES.map((file)=>\"/profiles/\".concat(file));\n}\n/**\n * Client-side function to get saved profile picture from local storage\n * @returns The saved profile picture path or null if none is saved\n */ function getSavedProfilePicture() {\n    if (true) {\n        return localStorage.getItem(\"profilePicture\");\n    }\n    return null;\n}\n/**\n * Client-side function to save a profile picture path to local storage\n * @param profilePath The profile picture path to save\n */ function saveProfilePicture(profilePath) {\n    if (true) {\n        localStorage.setItem(\"profilePicture\", profilePath);\n    }\n}\n/**\n * Client-side function to get the current profile picture or generate a new one if none exists\n * @returns The current profile picture path\n */ function getCurrentProfilePicture() {\n    if (true) {\n        const savedProfilePicture = getSavedProfilePicture();\n        if (savedProfilePicture) {\n            return savedProfilePicture;\n        }\n    // Generate a new one on the client side\n    // We can't use fs on client side, so we'll need to handle this differently\n    }\n    return \"/profiles/default_profile.jpeg\";\n}\n/**\n * Client-side function to fetch a random profile picture from the API\n * @returns Promise that resolves to a random profile picture path\n */ async function fetchRandomProfilePicture() {\n    try {\n        const response = await fetch(\"/api/profile/random\");\n        const data = await response.json();\n        return data.profilePicture;\n    } catch (error) {\n        console.error(\"Error fetching random profile picture:\", error);\n        return \"/profiles/default_profile.jpeg\";\n    }\n}\n/**\n * Client-side function to refresh the profile picture with a new randomly generated one\n * @returns Promise that resolves to the new profile picture path\n */ async function refreshProfilePicture() {\n    const newProfilePicture = await fetchRandomProfilePicture();\n    saveProfilePicture(newProfilePicture);\n    return newProfilePicture;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/profilePictureSelector.ts\n"));

/***/ })

});